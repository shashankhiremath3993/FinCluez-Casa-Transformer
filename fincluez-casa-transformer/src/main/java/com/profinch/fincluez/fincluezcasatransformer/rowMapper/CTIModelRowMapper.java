package com.profinch.fincluez.fincluezcasatransformer.rowMapper;

import com.profinch.fincluez.fincluezcasatransformer.models.CasaTransformationInputModel;
import org.springframework.jdbc.core.RowMapper;

import java.sql.ResultSet;
import java.sql.SQLException;

public class CTIModelRowMapper implements RowMapper<CasaTransformationInputModel> {
    @Override
    public CasaTransformationInputModel mapRow(ResultSet rs, int rowNum) throws SQLException {
        CasaTransformationInputModel casaTransformationInputModel = new CasaTransformationInputModel();

        casaTransformationInputModel.setBranchCode(rs.getString("branchCode"));
        casaTransformationInputModel.setEntityCode(rs.getString("entityCode"));
        casaTransformationInputModel.setCustAcNo(rs.getString("custAcNo"));
        casaTransformationInputModel.setAccountClass(rs.getString("accountClass"));
        casaTransformationInputModel.setAcDesc(rs.getString("acDesc"));
        casaTransformationInputModel.setCustNo(rs.getString("custNo"));
        casaTransformationInputModel.setCcy(rs.getString("ccy"));
        casaTransformationInputModel.setAcStatNoDr(rs.getString("acStatNoDr"));
        casaTransformationInputModel.setAcStatNoCr(rs.getString("acStatNoCr"));
        casaTransformationInputModel.setAcStatBlock(rs.getString("acStatBlock"));
        casaTransformationInputModel.setAcStatStopPay(rs.getString("acStatStopPay"));
        casaTransformationInputModel.setAcStatDormant(rs.getString("acStatDormant"));
        casaTransformationInputModel.setJointAcIndicator(rs.getString("jointAcIndicator"));
        casaTransformationInputModel.setAcStmtCycle(rs.getString("acStmtCycle"));
        casaTransformationInputModel.setAltAcNo(rs.getString("altAcNo"));
        casaTransformationInputModel.setChequeBookFacility(rs.getString("chequeBookFacility"));
        casaTransformationInputModel.setAtmFacility(rs.getString("atmFacility"));
        casaTransformationInputModel.setPassbookFacility(rs.getString("passbookFacility"));
        casaTransformationInputModel.setAcStmtType(rs.getString("acStmtType"));
        casaTransformationInputModel.setDrHoLine(rs.getString("drHoLine"));
        casaTransformationInputModel.setCrHoLine(rs.getString("crHoLine"));
        casaTransformationInputModel.setCrCbLine(rs.getString("crCbLine"));
        casaTransformationInputModel.setDrCbline(rs.getString("drCbline"));
        casaTransformationInputModel.setAcStatFrozen(rs.getString("acStatFrozen"));
        casaTransformationInputModel.setDrGl(rs.getString("drGl"));
        casaTransformationInputModel.setCrGl(rs.getString("crGl"));
        casaTransformationInputModel.setRecordStat(rs.getString("recordStat"));
        casaTransformationInputModel.setAuthStat(rs.getString("authStat"));
        casaTransformationInputModel.setMakerId(rs.getString("makerId"));
        casaTransformationInputModel.setCheckerId(rs.getString("checkerId"));
        casaTransformationInputModel.setOnceAuth(rs.getString("onceAuth"));
        casaTransformationInputModel.setLimitCcy(rs.getString("limitCcy"));
        casaTransformationInputModel.setLineId(rs.getString("lineId"));
        casaTransformationInputModel.setCasAccount(rs.getString("casAccount"));
        casaTransformationInputModel.setHasTover(rs.getString("hasTover"));
        casaTransformationInputModel.setAddress1(rs.getString("address1"));
        casaTransformationInputModel.setAddress2(rs.getString("address2"));
        casaTransformationInputModel.setAddress3(rs.getString("address3"));
        casaTransformationInputModel.setAddress4(rs.getString("address4"));
        casaTransformationInputModel.setTypeOfChq(rs.getString("typeOfChq"));
        casaTransformationInputModel.setAmtCustAcNo(rs.getString("amtCustAcNo"));
        casaTransformationInputModel.setGenStmtOnlyOnMvmt(rs.getString("GenStmtOnlyOnMvmt"));
        casaTransformationInputModel.setAcStatDePost(rs.getString("AcStatDePost"));
        casaTransformationInputModel.setDisplayIbanInAdvices(rs.getString("displayIbanInAdvices"));
        casaTransformationInputModel.setClearingBankCode(rs.getString("clearingBankCode"));
        casaTransformationInputModel.setClearingAcNo(rs.getString("clearingAcNo"));
        casaTransformationInputModel.setIbanAcNo(rs.getString("IbanAcNo"));
        casaTransformationInputModel.setAccStmtType2(rs.getString("accStmtType2"));
        casaTransformationInputModel.setAcStmtCycle2(rs.getString("acStmtCycle2"));
        casaTransformationInputModel.setGenStmtOnlyOnMvmt2(rs.getString("genStmtOnlyOnMvmt2"));
        casaTransformationInputModel.setAccStmtType3(rs.getString("accStmtType3"));
        casaTransformationInputModel.setAcStmtCycle3(rs.getString("acStmtCycle3"));
        casaTransformationInputModel.setGenStmtOnlyOnMvmt3(rs.getString("genStmtOnlyOnMvmt3"));
        casaTransformationInputModel.setMasterAccountNo(rs.getString("masterAccountNo"));
        casaTransformationInputModel.setCasCustomer(rs.getString("casCustomer"));
        casaTransformationInputModel.setAccountType(rs.getString("accountType"));
        casaTransformationInputModel.setTrackReceivable(rs.getString("trackReceivable"));
        casaTransformationInputModel.setChequeBookName1(rs.getString("chequeBookName1"));
        casaTransformationInputModel.setChequeBookName2(rs.getString("chequeBookName2"));
        casaTransformationInputModel.setAutoReorderChequeRequired(rs.getString("autoReorderChequeRequired"));
        casaTransformationInputModel.setAccStatus(rs.getString("accStatus"));
        casaTransformationInputModel.setStatusChangeAutomatic(rs.getString("statusChangeAutomatic"));
        casaTransformationInputModel.setDormantParam(rs.getString("dormantParam"));
        casaTransformationInputModel.setExposureCategory(rs.getString("exposureCategory"));
        casaTransformationInputModel.setStatementAccount(rs.getString("StatementAccount"));
        casaTransformationInputModel.setAccountDerivedStatus(rs.getString("accountDerivedStatus"));
        casaTransformationInputModel.setProvCcyType(rs.getString("provCcyType"));
        casaTransformationInputModel.setFunding(rs.getString("funding"));
        casaTransformationInputModel.setFundinBranch(rs.getString("fundinBranch"));
        casaTransformationInputModel.setFundingAccount(rs.getString("fundingAccount"));
        casaTransformationInputModel.setLocation(rs.getString("location"));
        casaTransformationInputModel.setMedia(rs.getString("media"));
        casaTransformationInputModel.setModeOfOperation(rs.getString("modeOfOperation"));
        casaTransformationInputModel.setTrnOverLimitCode(rs.getString("trnOverLimitCode"));
        casaTransformationInputModel.setCountryCode(rs.getString("countryCode"));
        casaTransformationInputModel.setConsolChargeAcc(rs.getString("consolChargeAcc"));
        casaTransformationInputModel.setLinkedDepBranch(rs.getString("linkedDepBranch"));
        casaTransformationInputModel.setAccountAutoClosed(rs.getString("accountAutoClosed"));
        casaTransformationInputModel.setLinkedDepAcc(rs.getString("linkedDepAcc"));
        casaTransformationInputModel.setAcSetClose(rs.getString("acSetClose"));
        casaTransformationInputModel.setSweepRequired(rs.getString("sweepRequired"));
        casaTransformationInputModel.setSweepOut(rs.getString("sweepOut"));
        casaTransformationInputModel.setAutoCreatePool(rs.getString("autoCreatePool"));
        casaTransformationInputModel.setDefaultWaiver(rs.getString("defaultWaiver"));
        casaTransformationInputModel.setAutoDcRequest(rs.getString("autoDcRequest"));
        casaTransformationInputModel.setAutoChequeRequest(rs.getString("autoChequeRequest"));
        casaTransformationInputModel.setIntermediaryRequired(rs.getString("intermediaryRequired"));
        casaTransformationInputModel.setFundId(rs.getString("fundId"));
        casaTransformationInputModel.setSalaryAccount(rs.getString("salaryAccount"));

        casaTransformationInputModel.setAcOpenDate(rs.getDate("acOpenDate"));
        casaTransformationInputModel.setPreviousStatment(rs.getDate("previousStatment"));
        casaTransformationInputModel.setTodLimitStartDate(rs.getDate("todLimitStartDate"));
        casaTransformationInputModel.setTodLimitEndDate(rs.getDate("todLimitEndDate"));
        casaTransformationInputModel.setMakerDateStamp(rs.getDate("makerDateStamp"));
        casaTransformationInputModel.setCheckerDateStamp(rs.getDate("checkerDateStamp"));
        casaTransformationInputModel.setDateLastCrActivity(rs.getDate("dateLastCrActivity"));
        casaTransformationInputModel.setDateLastDrActivity(rs.getDate("dateLastDrActivity"));
        casaTransformationInputModel.setDateLastDr(rs.getDate("dateLastDr"));
        casaTransformationInputModel.setDateLastCr(rs.getDate("dateLastCr"));
        casaTransformationInputModel.setTodStartDate(rs.getDate("todStartDate"));
        casaTransformationInputModel.setTodEndDate(rs.getDate("todEndDate"));
        casaTransformationInputModel.setDormancyDate(rs.getDate("dormancyDate"));
        casaTransformationInputModel.setLastCcyConvDate(rs.getDate("lastCcyConvDate"));
        casaTransformationInputModel.setPreviousStatementDate2(rs.getDate("previousStatementDate2"));
        casaTransformationInputModel.setPreviousStatementDate3(rs.getDate("previousStatementDate3"));
        casaTransformationInputModel.setStatusSince(rs.getDate("statusSince"));
        casaTransformationInputModel.setOverdraftSince(rs.getDate("overdraftSince"));
        casaTransformationInputModel.setPrevOvdDate(rs.getDate("prevOvdDate"));
        casaTransformationInputModel.setOverLineOdSince(rs.getDate("overLineOdSince"));
        casaTransformationInputModel.setTodSince(rs.getDate("todSince"));
        casaTransformationInputModel.setPrevTodSince(rs.getDate("prevTodSince"));
        casaTransformationInputModel.setCrLmStartDate(rs.getDate("crLmStartDate"));
        casaTransformationInputModel.setCrLmRevDate(rs.getDate("crLmRevDate"));
        casaTransformationInputModel.setNoOfChequeRejResetOn(rs.getDate("noOfChequeRejResetOn"));
        casaTransformationInputModel.setAcSetCloseDate(rs.getDate("acSetCloseDate"));
        casaTransformationInputModel.setLastPurgeDate(rs.getDate("lastPurgeDate"));

        casaTransformationInputModel.setAtmDailyCountLimit(rs.getInt("atmDailyCountLimit"));

        casaTransformationInputModel.setAcStatDay(rs.getDouble("acStatDay"));
        casaTransformationInputModel.setSubLimit(rs.getDouble("subLimit"));
        casaTransformationInputModel.setUncollFundsLimit(rs.getDouble("uncollFundsLimit"));
        casaTransformationInputModel.setPerviousStatmentBalance(rs.getDouble("perviousStatmentBalance"));
        casaTransformationInputModel.setPerviousStatmentNo(rs.getDouble("perviousStatmentNo"));
        casaTransformationInputModel.setTodLimit(rs.getDouble("todLimit"));
        casaTransformationInputModel.setModNo(rs.getDouble("modNo"));
        casaTransformationInputModel.setOfflineLimit(rs.getDouble("offlineLimit"));
        casaTransformationInputModel.setAcyOpeningBal(rs.getDouble("acyOpeningBal"));
        casaTransformationInputModel.setLcyOpeningBal(rs.getDouble("lcyOpeningBal"));
        casaTransformationInputModel.setAcyTodayToverDr(rs.getDouble("acyTodayToverDr"));
        casaTransformationInputModel.setLcyTodayToverDr(rs.getDouble("lcyTodayToverDr"));
        casaTransformationInputModel.setAcyTodayToverCr(rs.getDouble("acyTodayToverCr"));
        casaTransformationInputModel.setLcyTodayToverCr(rs.getDouble("lcyTodayToverCr"));
        casaTransformationInputModel.setAcyTankCr(rs.getDouble("acyTankCr"));
        casaTransformationInputModel.setAcyTankDr(rs.getDouble("acyTankDr"));
        casaTransformationInputModel.setLcyTankCr(rs.getDouble("lcyTankCr"));
        casaTransformationInputModel.setLcyTankDr(rs.getDouble("lcyTankDr"));
        casaTransformationInputModel.setAcyToverCr(rs.getDouble("acyToverCr"));
        casaTransformationInputModel.setLcyToverCr(rs.getDouble("lcyToverCr"));
        casaTransformationInputModel.setAcyTankUncollected(rs.getDouble("acyTankUncollected"));
        casaTransformationInputModel.setLcyCurrBalance(rs.getDouble("lcyCurrBalance"));
        casaTransformationInputModel.setAcyBlockedAmount(rs.getDouble("acyBlockedAmount"));
        casaTransformationInputModel.setAcyAvlBalance(rs.getDouble("acyAvlBalance"));
        casaTransformationInputModel.setAcyUnauthDr(rs.getDouble("acyUnauthDr"));
        casaTransformationInputModel.setAcyUnauthTankDr(rs.getDouble("acyUnauthTankDr"));
        casaTransformationInputModel.setAcyUnauthCr(rs.getDouble("acyUnauthCr"));
        casaTransformationInputModel.setAcyUnauthTankCr(rs.getDouble("acyUnauthTankCr"));
        casaTransformationInputModel.setAcyUnauthUncollected(rs.getDouble("acyUnauthUncollected"));
        casaTransformationInputModel.setAcyUnauthTankUncollected(rs.getDouble("acyUnauthTankUncollected"));
        casaTransformationInputModel.setAcyMtdToverDr(rs.getDouble("acyMtdToverDr"));
        casaTransformationInputModel.setLcyMtdToverDr(rs.getDouble("lcyMtdToverDr"));
        casaTransformationInputModel.setAcyMtdToverCr(rs.getDouble("acyMtdToverCr"));
        casaTransformationInputModel.setLcyMtdToverCr(rs.getDouble("lcyMtdToverCr"));
        casaTransformationInputModel.setAcyAccruedDrIc(rs.getDouble("acyAccruedDrIc"));
        casaTransformationInputModel.setAcyAccruedCrIc(rs.getDouble("acyAccruedCrIc"));
        casaTransformationInputModel.setAcyUncollected(rs.getDouble("acyUncollected"));
        casaTransformationInputModel.setDormancyDays(rs.getDouble("dormancyDays"));
        casaTransformationInputModel.setAtmDailyAmtLimit(rs.getDouble("atmDailyAmtLimit"));
        casaTransformationInputModel.setAcc_stmtDays2(rs.getDouble("acc_stmtDays2"));
        casaTransformationInputModel.setPreviousStatementBalance2(rs.getDouble("previousStatementBalance2"));
        casaTransformationInputModel.setPreviousStatementNo2(rs.getDouble("previousStatementNo2"));
        casaTransformationInputModel.setPreviousStatementBalance3(rs.getDouble("previousStatementBalance3"));
        casaTransformationInputModel.setPreviousStatementNo3(rs.getDouble("previousStatementNo3"));
        casaTransformationInputModel.setSweepType(rs.getDouble("sweepType"));
        casaTransformationInputModel.setCrAutoExRateLimit(rs.getDouble("autoDepositeBal"));
        casaTransformationInputModel.setMinReqdBal(rs.getDouble("minReqdBal"));
        casaTransformationInputModel.setCrAutoExRateLimit(rs.getDouble("crAutoExRateLimit"));
        casaTransformationInputModel.setDrAutoExRateLimit(rs.getDouble("drAutoExRateLimit"));
        casaTransformationInputModel.setReceivableAmount(rs.getDouble("receivableAmount"));
        casaTransformationInputModel.setAutoReorderChequeLevel(rs.getDouble("autoReorderChequeLevel"));
        casaTransformationInputModel.setAutoReorderCheckLeaves(rs.getDouble("autoReorderCheckLeaves"));
        casaTransformationInputModel.setDrIntDue(rs.getDouble("drIntDue"));
        casaTransformationInputModel.setRiskFreeExpAmount(rs.getDouble("riskFreeExpAmount"));
        casaTransformationInputModel.setProvisionAmount(rs.getDouble("provisionAmount"));
        casaTransformationInputModel.setCreditTxnLimit(rs.getDouble("creditTxnLimit"));
        casaTransformationInputModel.setChaegeDue(rs.getDouble("chaegeDue"));
        casaTransformationInputModel.setInterimDebitAmt(rs.getDouble("interimDebitAmt"));
        casaTransformationInputModel.setInterimCreditAmt(rs.getDouble("interimCreditAmt"));
        casaTransformationInputModel.setInterimStmtDayCount(rs.getDouble("interimStmtDayCount"));
        casaTransformationInputModel.setInterimStmtYtdCount(rs.getDouble("interimStmtYtdCount"));
        casaTransformationInputModel.setDayLightLimitAmount(rs.getDouble("dayLightLimitAmount"));
      //  casaTransformationInputModel.setPassbookNumber(rs.getDouble("passbookNumber"));
        casaTransformationInputModel.setMaxNoChequeRej(rs.getDouble("maxNoChequeRej"));
        casaTransformationInputModel.setNoChequeRej(rs.getDouble("noChequeRej"));
        casaTransformationInputModel.setAcyCurrBalance(rs.getDouble("acyCurrBalance"));

        return casaTransformationInputModel;
    }
}



