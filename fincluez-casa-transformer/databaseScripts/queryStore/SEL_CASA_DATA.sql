insert into fincluez_infra.query_store (id_query,query_description,enabled,query_string) values
('SEL_CASA_DATA','Mart Query 0',true,
 'SELECT a.branch_code             as branchCode,
       a.CUST_AC_NO                as custAcNo,
       AC_DESC                     as acDesc,
       CUST_NO                     as custNo,
       coalesce(b.CCY,a.CCY)            as ccy,
       ACCOUNT_CLASS               as accountClass,
       AC_STAT_NO_DR               as acStatNoDr,
       AC_STAT_NO_CR               as acStatNoCr,
       AC_STAT_BLOCK               as acStatBlock,
       AC_STAT_STOP_PAY            as acStatStopPay,
       coalesce(b.ac_stat_dormant,a.ac_stat_dormant)             as acStatDormant,
       JOINT_AC_INDICATOR          as jointAcIndicator,
       AC_OPEN_DATE                as acOpenDate,
       AC_STMT_DAY                 as acStatDay,
       AC_STMT_CYCLE               as acStmtCycle,
       ALT_AC_NO                   as altAcNo,
       CHEQUE_BOOK_FACILITY        as chequeBookFacility,
       ATM_FACILITY                as atmFacility,
       PASSBOOK_FACILITY           as passbookFacility,
       AC_STMT_TYPE                as acStmtType,
       DR_HO_LINE                  as drHoLine,
       CR_HO_LINE                  as crHoLine,
       CR_CB_LINE                  as crCbLine,
       DR_CB_LINE                  as drCbline,
       SUBLIMIT                    as subLimit,
       UNCOLL_FUNDS_LIMIT          as uncollFundsLimit,
       AC_STAT_FROZEN              as acStatFrozen,
       PREVIOUS_STATEMENT_DATE     as previousStatment,
       PREVIOUS_STATEMENT_BALANCE  as perviousStatmentBalance,
       PREVIOUS_STATEMENT_NO       as perviousStatmentNo,
       TOD_LIMIT_START_DATE        as todLimitStartDate,
       TOD_LIMIT_END_DATE          as todLimitEndDate,
       TOD_LIMIT                   as todLimit,
       DR_GL                       as drGl,
       CR_GL                       as crGl,
       RECORD_STAT                 as recordStat,
       AUTH_STAT                   as authStat,
       MOD_NO                      as modNo,
       MAKER_ID                    as makerId,
       MAKER_DT_STAMP              as makerDateStamp,
       CHECKER_ID                  as checkerId,
       CHECKER_DT_STAMP            as checkerDateStamp,
       ONCE_AUTH                   as onceAuth,
       LIMIT_CCY                   as limitCcy,
       LINE_ID                     as lineId,
       OFFLINE_LIMIT               as offlineLimit,
       CAS_ACCOUNT                 as casAccount,
       ACY_OPENING_BAL             as acyOpeningBal,
       LCY_OPENING_BAL             as lcyOpeningBal,
       ACY_TODAY_TOVER_DR          as acyTodayToverDr,
       LCY_TODAY_TOVER_DR          as lcyTodayToverDr,
       ACY_TODAY_TOVER_CR          as acyTodayToverCr,
       LCY_TODAY_TOVER_CR          as lcyTodayToverCr,
       ACY_TANK_CR                 as acyTankCr,
       ACY_TANK_DR                 as acyTankDr,
       LCY_TANK_CR                 as lcyTankCr,
       LCY_TANK_DR                 as lcyTankDr,
       ACY_TOVER_CR                as acyToverCr,
       LCY_TOVER_CR                as lcyToverCr,
       coalesce(b.acy_uncollected,a.acy_uncollected)       as acyTankUncollected,
       ACY_CURR_BALANCE            as acyCurrBalance,
       LCY_CURR_BALANCE            as lcyCurrBalance,
       coalesce(b.ACY_BLOCKED_AMT,a.Acy_Blocked_Amount)    as acyBlockedAmount,
       coalesce(b.acy_withdrawable_bal,a.ACY_AVL_BAL)      as acyAvlBalance,
       ACY_UNAUTH_DR               as acyUnauthDr,
       ACY_UNAUTH_TANK_DR          as acyUnauthTankDr,
       coalesce(b.ACY_UNAUTH_CR,a.ACY_UNAUTH_CR)           as acyUnauthCr,
       ACY_UNAUTH_TANK_CR          as acyUnauthTankCr,
       ACY_UNAUTH_UNCOLLECTED      as acyUnauthUncollected,
       ACY_UNAUTH_TANK_UNCOLLECTED as acyUnauthTankUncollected,
       ACY_MTD_TOVER_DR            as acyMtdToverDr,
       LCY_MTD_TOVER_DR            as lcyMtdToverDr,
       ACY_MTD_TOVER_CR            as acyMtdToverCr,
       LCY_MTD_TOVER_CR            as lcyMtdToverDr,
       ACY_ACCRUED_DR_IC           as acyAccruedDrIc,
       ACY_ACCRUED_CR_IC           as acyAccruedCrIc,
       DATE_LAST_CR_ACTIVITY       as dateLastCrActivity,
       DATE_LAST_DR_ACTIVITY       as dateLastDrActivity,
       DATE_LAST_DR                as dateLastDr,
       DATE_LAST_CR                as dateLastCr,
       coalesce(b.withdrawable_uncolled_fund,a.acy_uncollected)  as acyUncollected,
       TOD_START_DATE              as todStartDate,
       TOD_END_DATE                as todEndDate,
       DORMANCY_DATE               as dormancyDate,
       DORMANCY_DAYS               as dormancyDays,
       HAS_TOV                     as hasTover,
       LAST_CCY_CONV_DATE          as lastCcyConvDate,
       ADDRESS1                    as address1,
       ADDRESS2                    as address2,
       ADDRESS3                    as address3,
       ADDRESS4                    as address4,
       TYPE_OF_CHQ                 as typeOfChq,
       ATM_CUST_AC_NO              as amtCustAcNo,
       ATM_DLY_AMT_LIMIT           as atmDailyAmtLimit,
       ATM_DLY_COUNT_LIMIT         as atmDailyCountLimit,
       GEN_STMT_ONLY_ON_MVMT       as GenStmtOnlyOnMvmt,
       AC_STAT_DE_POST             as AcStatDePost,
       DISPLAY_IBAN_IN_ADVICES     as displayIbanInAdvices,
       CLEARING_BANK_CODE          as clearingBankCode,
       CLEARING_AC_NO              as clearingAcNo,
       IBAN_AC_NO                  as IbanAcNo,
       ACC_STMT_TYPE2              as accStmtType2,
       ACC_STMT_DAY2               as acc_stmtDays2,
       AC_STMT_CYCLE2              as acStmtCycle2,
       PREVIOUS_STATEMENT_DATE2    as previousStatementDate2,
       PREVIOUS_STATEMENT_BALANCE2 as previousStatementBalance2,
       PREVIOUS_STATEMENT_NO2      as previousStatementNo2,
       GEN_STMT_ONLY_ON_MVMT2      as genStmtOnlyOnMvmt2,
       ACC_STMT_TYPE3              as accStmtType3,
       AC_STMT_CYCLE3              as acStmtCycle3,
       PREVIOUS_STATEMENT_DATE3    as previousStatementDate3,
       PREVIOUS_STATEMENT_BALANCE3 as previousStatementBalance2,
       PREVIOUS_STATEMENT_NO3      as previousStatementNo3,
       GEN_STMT_ONLY_ON_MVMT3      as genStmtOnlyOnMvmt3,
       SWEEP_TYPE                  as sweepType,
       MASTER_ACCOUNT_NO           as masterAccountNo,
       AUTO_DEPOSITS_BAL           as autoDepositeBal,
       CAS_CUSTOMER                as casCustomer,
       ACCOUNT_TYPE                as accountType,
       MIN_REQD_BAL                as minReqdBal,
       CR_AUTO_EX_RATE_LMT         as crAutoExRateLimit,
       DR_AUTO_EX_RATE_LMT         as drAutoExRateLimit,
       TRACK_RECEIVABLE            as trackReceivable,
       coalesce(b.RECEIVABLE_AMOUNT,a.RECEIVABLE_AMOUNT)           as receivableAmount,
       CHECKBOOK_NAME_1            as chequeBookName1,
       CHECKBOOK_NAME_2            as chequeBookName2,
       AUTO_REORDER_CHECK_REQUIRED as autoReorderChequeRequired,
       AUTO_REORDER_CHECK_LEVEL    as autoReorderChequeLevel,
       AUTO_REORDER_CHECK_LEAVES   as autoReorderCheckLeaves,
       ACC_STATUS                  as accStatus,
       STATUS_SINCE                as statusSince,
       OVERDRAFT_SINCE             as overdraftSince,
       PREV_OVD_DATE               as prevOvdDate,
       STATUS_CHANGE_AUTOMATIC     as statusChangeAutomatic,
       OVERLINE_OD_SINCE           as overLineOdSince,
       TOD_SINCE                   as todSince,
       PREV_TOD_SINCE              as prevTodSince,
       DORMANT_PARAM               as dormantParam,
       DR_INT_DUE                  as drIntDue,
       EXPOSURE_CATEGORY           as exposureCategory,
       RISK_FREE_EXP_AMOUNT        as riskFreeExpAmount,
       PROVISION_AMOUNT            as provisionAmount,
       CREDIT_TXN_LIMIT            as creditTxnLimit,
       CR_LM_START_DATE            as crLmStartDate,
       CR_LM_REV_DATE              as crLmRevDate,
       STATEMENT_ACCOUNT           as StatementAccount,
       ACCOUNT_DERIVED_STATUS      as accountDerivedStatus,
       PROV_CCY_TYPE               as provCcyType,
       CHG_DUE                     as chaegeDue,
       FUNDING                     as funding,
       FUNDING_BRANCH              as fundinBranch,
       FUNDING_ACCOUNT             as fundingAccount,
       LOCATION                    as location,
       MEDIA                       as media,
       INTERIM_DEBIT_AMT           as interimDebitAmt,
       INTERIM_CREDIT_AMT          as interimCreditAmt,
       INTERIM_STMT_DAY_COUNT      as interimStmtDayCount,
       INTERIM_STMT_YTD_COUNT      as interimStmtYtdCount,
       MODE_OF_OPERATION           as modeOfOperation,
       DAYLIGHT_LIMIT_AMOUNT       as dayLightLimitAmount,
       TRNOVER_LMT_CODE            as trnOverLimitCode,
       COUNTRY_CODE                as countryCode,
       CONSOL_CHG_ACC              as consolChargeAcc,
       MAX_NO_CHEQUE_REJECTIONS    as maxNoChequeRej,
       NO_CHEQUE_REJECTIONS        as noChequeRej,
       LINKED_DEP_BRANCH           as linkedDepBranch,
       LINKED_DEP_ACC              as linkedDepAcc,
       ACCOUNT_AUTO_CLOSED         as accountAutoClosed,
       NO_OF_CHQ_REJ_RESET_ON      as noOfChequeRejResetOn,
       AC_SET_CLOSE                as acSetClose,
       AC_SET_CLOSE_DATE           as acSetCloseDate,
       SWEEP_REQUIRED              as sweepRequired,
       SWEEP_OUT                   as sweepOut,
       AUTO_CREATE_POOL            as autoCreatePool,
       LAST_PURGE_DATE             as lastPurgeDate,
       DEFAULT_WAIVER              as defaultWaiver,
       AUTO_DC_REQUEST             as autoDcRequest,
       AUTO_CHQBK_REQUEST          as autoChequeRequest,
       INTERMEDIARY_REQUIRED       as intermediaryRequired,
       FUND_ID                     as fundId,
       SALARY_ACCOUNT              as salaryAccount,
       a.ENTITY_CODE                 as entityCode
FROM STG_STTM_CUST_ACCOUNT a
     left join STG_STTM_ACCOUNT_BALANCE b
     on (a.cust_ac_no = b.cust_ac_no AND
	 a.entity_code = b.entity_code AND
	 a.branch_code = b.cust_ac_brn AND
	 a.el_run_date = b.el_run_date )
WHERE a.auth_stat = ''A'' AND
    a.branch_code = :branchCode AND
    a.entity_code = :entityCode AND
    a.el_run_date = :elRunDate AND
    a.cust_ac_no = :customerAccountNumber
order by a.CUST_AC_NO');

